---

import { getEntry, render } from "astro:content";
import Markdown from "@components/misc/Markdown.astro";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import MainGridLayout from "../layouts/MainGridLayout.astro";

const friendsPost = await getEntry("spec", "friends");


if (!friendsPost) {
	throw new Error("Friends page content not found");
}

const { Content } = await render(friendsPost);

const items = [
  {
    title: 'cxzlw',
    imgurl: 'https://avatars.githubusercontent.com/u/55052188?v=4',
    desc: '很高的大姐姐w',
    siteurl: 'https://blog.cxzlw.top/',
    tags: [],
  },
  {
    title: '安德joarith',
    imgurl: 'https://s3.bmp.ovh/imgs/2023/08/14/1e0318b61b359c1d.jpg',
    desc: 'OI物竞大佬',
    siteurl: 'https://www.cnblogs.com/jdashuai-wagc/',
    tags: [],
  },

]


---
<MainGridLayout title="Friends" description="Friends">
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
        <div class="card-base z-10 px-9 py-6 relative w-full ">


            <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-8 my-4" id="friends-list">
                {items.map((item) => (
                <div class="friend-card flex flex-nowrap items-stretch h-28 gap-4 rounded-[var(--radius-large)]">
                    <div class="w-28 h-28 flex-shrink-0 rounded-lg overflow-hidden bg-zinc-200 dark:bg-zinc-900">
                    <img src={item.imgurl} alt="站点头像" class="w-full h-full object-cover" />
                    </div>
                    <div class="grow w-full">
                    <div class="font-bold transition text-lg text-neutral-900 dark:text-neutral-100 mb-1">{item.title}</div>
                    <div class="text-50 text-sm font-medium">{item.desc}</div>
                    </div>
                    <a href={item.siteurl} target="_blank" rel="noopener noreferrer" class="flex btn-regular w-[3.25rem] rounded-lg bg-[var(--enter-btn-bg)] hover:bg-[var(--enter-btn-bg-hover)] active:bg-[var(--enter-btn-bg-active)] active:scale-95">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="transition text-[var(--primary)] text-4xl mx-auto iconify iconify--material-symbols" width="1em" height="1em" viewBox="0 0 24 24">
                        <path fill="currentColor" d="M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375t-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7z"></path>
                    </svg>
                    </a>
                </div>
                ))}
            </div>


            <Markdown class="mt-2">
                <Content />
            </Markdown>
        </div>
    </div>


    <!--在此处👇插入随机排列JS脚本 -->
    <script>
    window.addEventListener('DOMContentLoaded', () => {
        const container = document.getElementById('friends-list');
        if (!container) return;
        const cards = Array.from(container.children);
        // 洗牌算法
        for (let i = cards.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [cards[i], cards[j]] = [cards[j], cards[i]];
        }
        // 重新插入
        cards.forEach(card => container.appendChild(card));
    });
    </script>
    <!--在此处👆插入随机排列JS脚本 -->


</MainGridLayout>